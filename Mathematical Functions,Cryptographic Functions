//Mathematical Functions:

// SPDX-License-Identifier: MIT
pragma solidity 0.8.24;
contract PrimeNumber {
 function isPrime(uint256 n) public pure returns (string memory) {
 for (uint256 i = 2; i < n; i++) {
 if (n % i == 0) {
 return "Not a prime";
 } }
 return "prime"; }}


//CryptographicFunctions
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
contract CryptographicFunctions {
 function sha256Hash(string memory _input) public pure returns (bytes32) {
 return keccak256(abi.encodePacked(_input));
 }}
